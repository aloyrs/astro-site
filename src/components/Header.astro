---
import HeaderLink from "./HeaderLink.astro";
import SocialLinks from "./SocialLinks.astro";
import { SITE_TITLE } from "../consts";
import { menuLinks } from "../consts";
---

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const header = document.getElementById("main-header") as HTMLElement;
    const toggleMenuButton = document.getElementById(
      "toggle-navigation-menu"
    ) as HTMLButtonElement;
    let menuOpen = false;

    toggleMenuButton.addEventListener("click", () => {
      header.classList.toggle("menu-open");
      menuOpen = !menuOpen;
      toggleMenuButton.setAttribute("aria-expanded", menuOpen.toString());
    });
  });
</script>

<header
  id="main-header"
  class="group relative mb-16 flex items-center justify-between"
>
  <a
    href="/"
    class="inline-flex items-center grayscale hover:filter-none sm:relative sm:inline-block"
  >
    <span class="text-2xl font-bold sm:text-2xl" id="aloysius"
      >{SITE_TITLE}</span
    >
  </a>

  <nav
    id="navigation-menu"
    class="header-nav absolute -inset-x-4 top-14 hidden flex-col items-end gap-y-4 rounded-md bg-bgColor/[.85] py-4 text-accent shadow backdrop-blur group-[.menu-open]:z-50 group-[.menu-open]:flex sm:static sm:z-auto sm:-ms-4 sm:mt-1 sm:flex sm:flex-row sm:items-center sm:divide-x-2 sm:divide-accent sm:rounded-none sm:bg-transparent sm:py-0 sm:shadow-none sm:backdrop-blur-none"
    aria-label="Main menu"
  >
    {
      menuLinks.map((link) => (
        <HeaderLink
          href={link.path}
          class="px-4 py-4 sm:py-0 sm:hover:underline"
          rel="prefetch"
        >
          {link.title}
        </HeaderLink>
      ))
    }
  </nav>

  <div class="flex items-center">
    <div class="hidden sm:block"><SocialLinks /></div>

    <button
      id="toggle-navigation-menu"
      class="group relative ms-2 h-7 w-7 sm:invisible sm:hidden"
      type="button"
      aria-label="Open main menu"
      aria-expanded="false"
      aria-haspopup="menu"
    >
      <svg
        id="line-svg"
        class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 transition-all group-aria-expanded:scale-0 group-aria-expanded:opacity-0"
        aria-hidden="true"
        focusable="false"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M3.75 9h16.5m-16.5 6.75h16.5"></path>
      </svg>
      <svg
        id="cross-svg"
        class="absolute start-1/2 top-1/2 h-full w-full -translate-x-1/2 -translate-y-1/2 scale-0 text-accent opacity-0 transition-all group-aria-expanded:scale-100 group-aria-expanded:opacity-100"
        class="text-accent"
        aria-hidden="true"
        focusable="false"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>
  </div>
</header>

<style>
  .header-nav {
    text-underline-offset: 5px;
  }

  #aloysius {
    color: transparent;
    background: linear-gradient(
      90deg,
      rgb(30, 30, 30) 0%,
      rgb(51, 51, 51) 10%,
      rgb(102, 102, 102) 20%,
      rgb(153, 153, 153) 30%,
      rgb(204, 204, 204) 40%,
      rgb(240, 240, 240) 50%,
      rgb(204, 204, 204) 60%,
      rgb(153, 153, 153) 70%,
      rgb(102, 102, 102) 80%,
      rgb(51, 51, 51) 90%,
      rgb(30, 30, 30) 100%
    );
    background-size: 200% auto;
    -webkit-background-clip: text;
    background-clip: text;
    animation:
      move 4s linear infinite,
      hide 4s 4s infinite,
      unhide 4s 4s infinite;
  }

  @keyframes move {
    to {
      background-position: -200% 0;
    }
  }

  @keyframes hide {
    0% {
      opacity: 1;
    }
    0.01% {
      opacity: 0;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes unhide {
    0% {
      opacity: 0;
    }
    0.01% {
      opacity: 1;
    }
    100% {
      opacity: 1;
    }
  }
</style>
